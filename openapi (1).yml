openapi: 3.0.1
info:
  title: Self-Detailing API
  version: 1.0.0
  description: API для управления сервисами и календарем бронирования
servers:
  - url: /api/v1
paths:
  /services:
    get:
      summary: Получить все сервисы
      responses:
        '200':
          description: Список сервисов
    post:
      summary: Создать сервис
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppServiceDtoReq'
      responses:
        '200':
          description: Сервис создан
  /services/{id}:
    get:
      summary: Получить сервис по id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Сервис
    put:
      summary: Обновить сервис
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppServiceDtoReq'
      responses:
        '200':
          description: Сервис обновлен
    delete:
      summary: Удалить сервис
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Сервис удален
  /calendar/available:
    get:
      summary: Получить доступные слоты
      parameters:
        - name: start
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: end
          in: query
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Список слотов
  /calendar/book:
    post:
      summary: Забронировать слот
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingRequestDto'
      responses:
        '201':
          description: Слот забронирован
  /calendar/booking/{eventId}/ics:
    get:
      summary: Получить ICS-файл
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ICS-файл
          content:
            text/calendar:
              schema:
                type: string
  /chat/send-message/{id}:
    post:
      summary: Отправить сообщение в чат
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageToChatReq'
      responses:
        '200':
          description: Сообщение отправлено
components:
  schemas:
    AppServiceDtoReq:
      type: object
      properties:
        serviceName:
          type: string
        price:
          type: number
          format: double
    BookingRequestDto:
      type: object
      properties:
        telegramUserId:
          type: integer
        clientName:
          type: string
        clientPhone:
          type: string
        clientEmail:
          type: string
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        serviceType:
          type: string
        notes:
          type: string
    MessageToChatReq:
      type: object
      properties:
        message:
          type: string